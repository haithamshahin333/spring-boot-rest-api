# This workflow will build a package using Maven and then publish it to GitHub packages when a release is created
# For more information see: https://github.com/actions/setup-java/blob/main/docs/advanced-usage.md#apache-maven-with-a-settings-path

name: Build and Test Artifact and Container Image

on:
  push:
    branches:
    - main
    - release/*
    
env:
  ACR_REGISTRY_NAME: ${{ secrets.ACR_REGISTRY_NAME }} 

jobs:
  build:

    runs-on: self-hosted
    permissions:
      contents: read
      packages: write

    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 8
      uses: actions/setup-java@v2
      with:
        java-version: '11'
        distribution: 'microsoft'
        server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
        settings-path: ${{ github.workspace }} # location for the settings.xml file

    - name: Build and Test with Maven
      run: mvn -B clean package --file pom.xml

    - name: Display AZ Version
      run: az version

    # - name: Publish to GitHub Packages Apache Maven
    #   run: mvn deploy -s $GITHUB_WORKSPACE/settings.xml
    #   env:
    #     GITHUB_TOKEN: ${{ github.token }}

    ## Ideally should use pod identity here to talk with Azure services
    - name: Azure Login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }} # https://github.com/Azure/login#configure-a-service-principal-with-a-secret

    - name: ACR Build and Push to Registry
      run: |
        az acr build --image restapi:${{ github.sha }} \
            --registry $ACR_REGISTRY_NAME \
            --file Dockerfile .